name: Deployment Exercise 2
on: 
  push:
    branches:
      - main
  pull_request:
    types: [opened, closed, synchronize, reopened]
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: dependencies-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: dependencies-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      state-file: ${{ steps.publish.outputs.state-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: dependencies-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build code
        run: npm run build
      - name: Publish the file name
        run: find /dist/*.js -type f -execdir echo "state-file={}" >> $GITHUB_ENV ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files 
          path: |
            dist
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy code
        uses: actions/download-artifact@v4 
        with:
          name: dist-files
          path: |
            dist
            package.json
      - name: output the files
        run: ls -ltr
      - name: Get file name
        run: "echo ${{ needs.outputs.state-file}}"
      - name: Deploying
        run: echo "Deployment done successfully!" 